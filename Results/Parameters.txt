args = dotdict({
    'numIters': 1,
    'numEps': 100,              # Number of complete self-play games to simulate during a new iteration. Games per Checkpoint
    'tempThreshold': 30,        #
    'updateThreshold': 0.6,     # During arena playoff, new neural net will be accepted if threshold or more of games are won.
    'maxlenOfQueue': 200000,    # Number of game examples to train the neural networks.
    'numMCTSSims': 100, ## Number of games moves for MCTS to simulate. 18496
    'arenaCompare': 4,
    'cpuct': 2,

    'checkpoint': './checkpoints/',
    'load_model': False,
    'load_folder_file': ('./checkpoints', 'checkpoint_0.pth.tar'),
    'starting_iteration': 1,
    'checkpoint': './new/',
    'load_model': False,
    'load_folder_file': ('./13_03', 'checkpoint_1.pth.tar'),
    'starting_iteration': 1,
    'numItersForTrainExamplesHistory': 100,
    'verbose': True,

})
# Hyperparameters
args = dotdict({
    'lr': 0.01,  # Learning rate
    'momentum': 0.9,  # Momentum for SGD optimizer
    'epochs': 5,  # Number of training epochs
    'batch_size': 64,  # Batch size for training 64 normally but 128 for gpu
    'cuda': torch.cuda.is_available(),  # Check if CUDA is available for GPU usage
    'plot_dir': 'training_plots',  # Directory to save plots
}) 

requirement: python -m pip install scipy

Command: python analyzer.py --baseline profile_results_old.prof --optimized profile_results_new.prof --baseline-training training_data_old.csv --optimized-training training_data_new.csv